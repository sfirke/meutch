"""Update Item model to have single category and add Tag model

Revision ID: 916dcd3461f2
Revises: 32750aea1d74
Create Date: 2024-11-07 13:43:47.555007

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '916dcd3461f2'
down_revision = '32750aea1d74'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('item_tags',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('item_id', 'tag_id')
    )
    op.drop_table('item_categories')
    op.drop_table('item_category')
    op.drop_table('item_tag')
    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'category', ['category_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('category_id')

    op.create_table('item_tag',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name='item_tag_item_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='item_tag_pkey')
    )
    op.create_table('item_category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('item_category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='item_category_pkey'),
    sa.UniqueConstraint('name', name='item_category_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('item_categories',
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['item_category.id'], name='item_categories_category_id_fkey'),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name='item_categories_item_id_fkey')
    )
    op.drop_table('item_tags')
    op.drop_table('tag')
    op.drop_table('category')
    # ### end Alembic commands ###
