name: Test Staging Branch

on:
  push:
    branches: [ staging ]
  workflow_dispatch:  # Allow manual testing

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: test_meutch
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up environment variables
      run: |
        echo "FLASK_ENV=testing" >> $GITHUB_ENV
        echo "TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_meutch" >> $GITHUB_ENV
        echo "SECRET_KEY=$(python -c 'import secrets; print(secrets.token_urlsafe(32))')" >> $GITHUB_ENV
    
    - name: Run tests with pytest
      run: |
        pytest --cov=app --cov-report=xml --cov-report=html -v

    - name: Tests completed successfully
      run: |
        echo "âœ… All tests passed!"
        echo "ðŸš€ DigitalOcean will auto-deploy staging branch"
